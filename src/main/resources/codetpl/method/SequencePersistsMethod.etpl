<%
var entity, nextIdSql, columns, tableName, fieldTypes;
%>
    @Override
    public void persist(List<${entity.simpleName}> entities) throws SQLException, Exception {
        if (entities == null) {
            return;
        }
        PreparedStatement pstmt = null;
        boolean initAuto = false;
        try {
            if (session.getAutoCommit()) {
                initAuto = true;
                session.setAutoCommit(false);
            }
            int i = 0;
            Long[] aId = new Long[entities.size()];
            String sId = "${nextIdSql}";
            pstmt = session.prepareStatement(sId);
            for (${entity.simpleName} entity : entities) {
                if (entity.getId() == null || entity.getId() <= 0) {
                    ResultSet rs = pstmt.executeQuery();
                    if (rs.next()) {
                        aId[i] = rs.getLong("nid");
                    }
                } else {
                    aId[i] = entity.getId();
                }
                i++;
            }
            i = 0;
            String sql = "insert into ${tableName} ("
                    + "<%for(column : columns){%>
                    <%if (for.iter.index%4==0 && for.iter.index > 0) {%>" 
                    + "<%}%>${column}<%if (for.iter.index!=columns.size-1) {%>,<%}%><% } %>"
                    + ") values (" 
                    + "<%for(column : columns){%>
                    <%if (for.iter.index>0) {%>,<%}%>?<% } %>"
                    + ")";
            if (logger.isTraceEnabled()) {
                logger.trace("insert sql = {{}}", sql);
            }
            pstmt = session.prepareStatement(sql);
            int row;
            for (${entity.simpleName} entity : entities) {
                <%
                for (column : columns) {
                    var info = fieldTypes[column];
                    if (info.isId) {
                %>
                pstmt.set${info.setMethod}(${for.iter.index+1}, aId[i]);
                <%
                    } else {
                        if ("TIMESTAMP" == info.temporal) {
                %>
                Timestamp ts${for.iter.index+1} = null;
                if (entity.get${info.method}() != null) {
                    ts${for.iter.index+1} = new Timestamp(entity.get${info.method}().getTime());
                }
                pstmt.set${info.setMethod}(${for.iter.index+1}, ts${for.iter.index+1});
                <%
                        } else if ("DATE" == info.temporal) {
                %>
                java.sql.Date ts${for.iter.index+1} = null;
                if (entity.get${info.method}() != null) {
                    ts${for.iter.index+1} = new java.sql.Date(entity.get${info.method}().getTime());
                }
                pstmt.set${info.setMethod}(${for.iter.index+1}, ts${for.iter.index+1});
                <%
                        } else if ("TIME" == info.temporal) {
                %>
                java.sql.Time ts${for.iter.index+1} = null;
                if (entity.get${info.method}() != null) {
                    ts${for.iter.index+1} = new java.sql.Time(entity.get${info.method}.getTime());
                }
                pstmt.set${info.setMethod}(${for.iter.index+1}, ts${for.iter.index+1});
                <%
                        } else {
                %>
                pstmt.set${info.setMethod}(${for.iter.index+1}, entity.get${info.method}());
                <%
                        }
                    }
                }
                %>
                row = pstmt.executeUpdate();
                if (row > 0) {
                    entity.setId(aId[i]);
                }
                i++;
            }
            if (initAuto) {
                session.commit();
            }
            if (initAuto) {
                session.commit();
            }
        } catch (SQLException ex) {
            logger.error("persist error", ex);
            throw ex;
        } finally {
            if (!session.enableBatch()) {
                session.closeStatements();
            }
            if (initAuto) {
                session.setAutoCommit(true);
            }
        }
    }
